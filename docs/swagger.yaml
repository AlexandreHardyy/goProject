basePath: /
definitions:
  controller.Payment:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      pricePaid:
        type: number
      productId:
        type: integer
      updatedAt:
        type: string
    type: object
  controller.Product:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API in golang
  version: "1.0"
paths:
  /payments:
    get:
      consumes:
      - application/json
      description: Get all payments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Payment'
      summary: Get all payments
      tags:
      - payments
    post:
      consumes:
      - application/json
      description: Create a payment
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Payment'
      summary: Create a payment
      tags:
      - payments
  /payments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a payment
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Payment'
      summary: Delete a payment
      tags:
      - payments
    get:
      consumes:
      - application/json
      description: Get a payment
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Payment'
      summary: Get a payment
      tags:
      - payments
    put:
      consumes:
      - application/json
      description: Update a payment
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Payment'
      summary: Update a payment
      tags:
      - payments
  /payments/stream:
    get:
      consumes:
      - application/json
      description: Stream payments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Payment'
      summary: Stream payments
      tags:
      - payments
  /products:
    get:
      consumes:
      - application/json
      description: Get all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Product'
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Product'
      summary: Create a product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Product'
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get products by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Product'
      summary: Get products by id
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Check error
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Product'
      summary: Check error
      tags:
      - products
swagger: "2.0"
